server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: ${APPLICATION_NAME:booking-service}

  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:bookings?createDatabaseIfNotExist=true}
    username: "${MYSQL_USER:root}"
    password: "${MYSQL_PASSWORD:7476}"
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  kafka:
    producer:
      bootstrap-servers:
        - "localhost:19092"
        - "localhost:29092"
        - "localhost:39092"
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers:
        - "localhost:19092"
        - "localhost:29092"
        - "localhost:39092"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest


#Enable Register with eureka server
eureka:
  client:
    register-with-eureka: ${REGISTER_WITH_EUREKA:true}
    service-url:
      defaultZone: ${DEFAULT_ZONE:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: "*"

#spring.application.name=booking-service
#server.port=8080
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/